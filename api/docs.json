{
    "swagger": "2.0",
    "info": {
        "title": "SongLib API",
        "description": "API documentation for Songlib",
        "version": "1.0",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "APIs Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "songlive.vercel.app",
    "basePath": "/api",
    "schemes": [ "https" ],
    "paths": {
        "/book": {
            "get": {
                "tags": [ "Book" ],
                "summary": "Get Book List",
                "responses": {
                    "200": {
                        "description": "A list of books",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Book"
                            }
                        }
                    }
                }
            }
        },
        "/book/{bookId}": {
            "get": {
                "tags": [ "Book" ],
                "summary": "Get a Book by ID",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book details",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            }
        },
        "/song": {
            "get": {
                "tags": [ "Song" ],
                "summary": "Get Song List",
                "responses": {
                    "200": {
                        "description": "A list of songs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Song"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [ "Song" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Save a Song",
                "parameters": [
                    {
                        "in": "body",
                        "name": "song",
                        "schema": {
                            "$ref": "#/definitions/Song"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Song created"
                    }
                }
            }
        },
        "/song/{songId}": {
            "get": {
                "tags": [ "Song" ],
                "summary": "Get a Song by ID",
                "parameters": [
                    {
                        "name": "songId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song details",
                        "schema": {
                            "$ref": "#/definitions/Song"
                        }
                    },
                    "404": {
                        "description": "Song not found"
                    }
                }
            },
            "delete": {
                "tags": [ "Song" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Delete a Song",
                "parameters": [
                    {
                        "name": "songId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Song deleted"
                    }
                }
            }
        },
        "/song/{bookIds}": {
            "get": {
                "tags": [ "Song" ],
                "summary": "Get Song List by Book ID(s)",
                "parameters": [
                    {
                        "name": "bookIds",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of songs by book ID(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/bulk/{bookId}": {
            "delete": {
                "tags": [ "Song" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Delete Songs by Book ID",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Songs deleted by book ID"
                    }
                }
            }
        },
        "/song/bulk": {
            "post": {
                "tags": [ "Song" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Save Multiple Songs",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "book": {
                                        "type": "integer"
                                    },
                                    "songNo": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "alias": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Multiple songs created"
                    }
                }
            }
        },
        "/song/bulk/{valueToAdd}": {
            "put": {
                "tags": [ "Song" ],
                "summary": "Update Multiple Songs",
                "parameters": [
                    {
                        "name": "valueToAdd",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "book": {
                                        "type": "integer"
                                    },
                                    "songNo": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "alias": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Multiple songs updated"
                    }
                }
            }
        },
        "/draft": {
            "get": {
                "tags": [ "Draft" ],
                "summary": "Get Draft List",
                "responses": {
                    "200": {
                        "description": "A list of drafts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Draft"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [ "Draft" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Save a Draft",
                "parameters": [
                    {
                        "in": "body",
                        "name": "draft",
                        "schema": {
                            "$ref": "#/definitions/Draft"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Draft created"
                    }
                }
            }
        },
        "/draft/{draftId}": {
            "get": {
                "tags": [ "Draft" ],
                "summary": "Get a Draft by ID",
                "parameters": [
                    {
                        "name": "draftId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Draft details",
                        "schema": {
                            "$ref": "#/definitions/Draft"
                        }
                    },
                    "404": {
                        "description": "Draft not found"
                    }
                }
            },
            "delete": {
                "tags": [ "Draft" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Delete a Draft",
                "parameters": [
                    {
                        "name": "draftId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Draft deleted"
                    }
                }
            },
            "/draft/{bookIds}": {
                "get": {
                    "tags": [
                        "Draft"
                    ],
                    "summary": "Get Draft List by Book ID(s)",
                    "parameters": [
                        {
                            "name": "bookIds",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A list of drafts by book ID(s)",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "title": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/edit": {
            "get": {
                "tags": [ "Edit" ],
                "summary": "Get Edit List",
                "responses": {
                    "200": {
                        "description": "A list of edits",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Edit"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [ "Edit" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Save a Edit",
                "parameters": [
                    {
                        "in": "body",
                        "name": "edit",
                        "schema": {
                            "$ref": "#/definitions/Edit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Edit created"
                    }
                }
            }
        },
        "/edit/{editId}": {
            "get": {
                "tags": [ "Edit" ],
                "summary": "Get a Edit by ID",
                "parameters": [
                    {
                        "name": "editId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Edit details",
                        "schema": {
                            "$ref": "#/definitions/Edit"
                        }
                    },
                    "404": {
                        "description": "Edit not found"
                    }
                }
            },
            "delete": {
                "tags": [ "Edit" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Delete a Edit",
                "parameters": [
                    {
                        "name": "editId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Edit deleted"
                    }
                }
            },
            "/edit/{bookIds}": {
                "get": {
                    "tags": [
                        "Edit"
                    ],
                    "summary": "Get Edit List by Book ID(s)",
                    "parameters": [
                        {
                            "name": "bookIds",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A list of edits by book ID(s)",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "title": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/listed": {
            "get": {
                "tags": [ "Listed" ],
                "summary": "Get Listed List",
                "responses": {
                    "200": {
                        "description": "A list of listeds",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Listed"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [ "Listed" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Save a Listed",
                "parameters": [
                    {
                        "in": "body",
                        "name": "listed",
                        "schema": {
                            "$ref": "#/definitions/Listed"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Listed created"
                    }
                }
            }
        },
        "/listed/{listedId}": {
            "get": {
                "tags": [ "Listed" ],
                "summary": "Get a Listed by ID",
                "parameters": [
                    {
                        "name": "listedId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Listed details",
                        "schema": {
                            "$ref": "#/definitions/Listed"
                        }
                    },
                    "404": {
                        "description": "Listed not found"
                    }
                }
            },
            "delete": {
                "tags": [ "Listed" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Delete a Listed",
                "parameters": [
                    {
                        "name": "listedId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Listed deleted"
                    }
                }
            },
            "/listed/{bookIds}": {
                "get": {
                    "tags": [ "Listed" ],
                    "summary": "Get Listed List by Book ID(s)",
                    "parameters": [
                        {
                            "name": "bookIds",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A list of listeds by book ID(s)",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "title": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/org": {
            "get": {
                "tags": [ "Organisation" ],
                "summary": "Get Organisation List",
                "responses": {
                    "200": {
                        "description": "A list of orgs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Organisation"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [ "Organisation" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Save a Organisation",
                "parameters": [
                    {
                        "in": "body",
                        "name": "org",
                        "schema": {
                            "$ref": "#/definitions/Organisation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Organisation created"
                    }
                }
            }
        },
        "/org/{orgId}": {
            "get": {
                "tags": [ "Organisation" ],
                "summary": "Get a Organisation by ID",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organisation details",
                        "schema": {
                            "$ref": "#/definitions/Organisation"
                        }
                    },
                    "404": {
                        "description": "Organisation not found"
                    }
                }
            },
            "delete": {
                "tags": [ "Organisation" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Delete a Organisation",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Organisation deleted"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [ "User" ],
                "summary": "Get User List",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [ "User" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Save a User",
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created"
                    }
                }
            }
        },
        "/user/{userId}": {
            "get": {
                "tags": [ "User" ],
                "summary": "Get a User by ID",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [ "User" ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Delete a User",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    }
                }
            }
        }
    },
    "definitions": {
        "Song": {
            "type": "object",
            "properties": {
                "book": {
                    "type": "integer",
                    "description": "ID of the book the song belongs to"
                },
                "songId": {
                    "type": "integer",
                    "description": "Unique ID of the song"
                },
                "songNo": {
                    "type": "integer",
                    "description": "Song number in the book"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the song"
                },
                "alias": {
                    "type": "string",
                    "description": "Alternative title for the song"
                },
                "content": {
                    "type": "string",
                    "description": "Lyrics or content of the song"
                },
                "key": {
                    "type": "string",
                    "description": "Musical key of the song"
                },
                "author": {
                    "type": "string",
                    "description": "Author of the song"
                },
                "views": {
                    "type": "integer",
                    "description": "Number of views"
                },
                "likes": {
                    "type": "integer",
                    "description": "Number of likes"
                },
                "liked": {
                    "type": "boolean",
                    "description": "Whether the song is liked"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation date"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last updated date"
                }
            }
        },
        "Book": {
            "type": "object",
            "properties": {
                "bookId": {
                    "type": "integer",
                    "description": "Unique ID of the book"
                },
                "user": {
                    "type": "integer",
                    "description": "ID of the user who created the book"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon associated with the book"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the book"
                },
                "subTitle": {
                    "type": "string",
                    "description": "Subtitle of the book"
                },
                "songs": {
                    "type": "integer",
                    "description": "Number of songs in the book"
                },
                "position": {
                    "type": "integer",
                    "description": "Position of the book"
                },
                "bookNo": {
                    "type": "integer",
                    "description": "Book number"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the book is enabled"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation date"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last updated date"
                }
            }
        },
        "Draft": {
            "type": "object",
            "properties": {
                "draftId": {
                    "type": "integer",
                    "description": "Unique ID of the draft"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the draft"
                },
                "content": {
                    "type": "string",
                    "description": "Content of the draft"
                },
                "author": {
                    "type": "string",
                    "description": "Author of the draft"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation date"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last updated date"
                }
            }
        },
        "Edit": {
            "type": "object",
            "properties": {
                "editId": {
                    "type": "integer",
                    "description": "Unique ID of the edit"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the edit"
                },
                "content": {
                    "type": "string",
                    "description": "Content of the edit"
                },
                "author": {
                    "type": "string",
                    "description": "Author of the edit"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation date"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last updated date"
                }
            }
        },
        "Listed": {
            "type": "object",
            "properties": {
                "listedId": {
                    "type": "integer",
                    "description": "Unique ID of the listed"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the listed"
                },
                "content": {
                    "type": "string",
                    "description": "Content of the listed"
                },
                "author": {
                    "type": "string",
                    "description": "Author of the listed"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation date"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last updated date"
                }
            }
        },
        "Org": {
            "type": "object",
            "properties": {
                "listedId": {
                    "type": "integer",
                    "description": "Unique ID of the organisation"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the organisation"
                },
                "content": {
                    "type": "string",
                    "description": "Description of the organisation"
                },
                "author": {
                    "type": "string",
                    "description": "Creator of the organisation"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation date"
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last updated date"
                }
            }
        }
    }
}